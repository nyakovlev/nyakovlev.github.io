{"version":3,"sources":["media/stubble_1_right.svg","media/shrek.png","media/noir_sunset.svg","media/stubble_1_left.svg","on_the_ground.mp3","media/tack.wav","Stubble.js","Shrek.js","ShrekDialog.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Origin","styled","div","Character","img","stances","left","leftImg","right","rightImg","Stubble","props","style","pos","src","stance","Shrek","shrekImg","DialogPane","Dialog","Icon","Speech","ButtonPane","Button","ShrekDialog","stubble","position","top","width","stubbleText","shrek","shrekText","onClick","controls","proceedShrekTalk","GameWindow","Bg","Floor","Marker","Prompt","Game","dialogPrompt","dialog","Math","abs","stubblePos","shrekPos","talkToShrek","shrekDialog","bg","panPos","stubbleStance","keys","handleKeyDown","e","key","handleKeyUp","env","playing","discussionStep","ctl","setState","moveStubble","offset","newState","newPanPos","set","k","runUpdateLoop","setTimeout","playMusic","mloop","Audio","music","play","runDiscussion","discussion","length","Object","entries","target","text","say","targets","speaker","typedText","flop","typeChar","charAt","tack","Splash","App","useState","state","document","removeEventListener","addEventListener","className","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3dd34ea5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stubble_1_right.aa66f312.svg\";","module.exports = __webpack_public_path__ + \"static/media/shrek.74508cc1.png\";","module.exports = __webpack_public_path__ + \"static/media/noir_sunset.3b48022c.svg\";","module.exports = __webpack_public_path__ + \"static/media/stubble_1_left.e5dd0d5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/on_the_ground.8efa9dc5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tack.9e9ac630.wav\";","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport rightImg from \"./media/stubble_1_right.svg\";\r\nimport leftImg from \"./media/stubble_1_left.svg\";\r\n\r\nconst Origin = styled.div`\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    top: 70%;\r\n`;\r\n\r\nconst Character = styled.img`\r\n    width: 76px;\r\n    height: 158px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    transform: translateY(-100%);\r\n`;\r\n\r\nconst stances = {\r\n    left: leftImg,\r\n    right: rightImg\r\n}\r\n\r\nexport default function Stubble(props) {\r\n    return (\r\n        <Origin style={{left: `${props.pos}px`}}>\r\n            <Character src={stances[props.stance]}/>\r\n        </Origin>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport shrekImg from \"./media/shrek.png\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Character = styled.img`\r\n    height: 200px;\r\n    position: absolute;\r\n    left: 1400px;\r\n    top: 0;\r\n    transform: translateY(-90%);\r\n`;\r\n\r\nexport default function Shrek(props) {\r\n    return (\r\n        <Character src={shrekImg}/>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport stubble from \"./media/stubble_1_right.svg\";\r\nimport shrek from \"./media/shrek.png\";\r\n\r\nconst DialogPane = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    z-index: 5;\r\n`;\r\n\r\nconst Dialog = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Character = styled.div`\r\n    margin: 0 30px;\r\n    padding: 10px;\r\n    border: 2px solid white;\r\n    background-color: rgb(11, 34, 51);\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    width: 200px;\r\n    height: 400px;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n    position: relative;\r\n    height: 230px;\r\n    overflow: hidden;\r\n\r\n    border-bottom: 1px solid white;\r\n`;\r\n\r\nconst Speech = styled.div`\r\n    margin: 5px;\r\n    font-family: monospace;\r\n    text-align: left;\r\n`;\r\n\r\nconst ButtonPane = styled.div`\r\n    width: 100%;\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Button = styled.div`\r\n    position: absolute;\r\n    padding: 7px;\r\n    color: white;\r\n    border: 2px solid white;\r\n    background-color: rgb(11, 34, 51);\r\n    color: white;\r\n    font-family: monospace;\r\n    cursor: pointer;\r\n    :hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nexport default function ShrekDialog(props) {\r\n    return (\r\n        <DialogPane>\r\n            <Dialog>\r\n                <Character>\r\n                    <Icon>\r\n                        <img src={stubble} style={{\r\n                            position: \"absolute\",\r\n                            left: \"-30px\",\r\n                            top: \"20px\",\r\n                            width: \"240px\"\r\n                        }}/>\r\n                    </Icon>\r\n                    <Speech>{props.stubbleText}</Speech>\r\n                </Character>\r\n                <Character>\r\n                    <Icon>\r\n                        <img src={shrek} style={{\r\n                            position: \"absolute\",\r\n                            left: \"-30px\",\r\n                            top: \"0px\",\r\n                            width: \"240px\"\r\n                        }}/>\r\n                    </Icon>\r\n                    <Speech>{props.shrekText}</Speech>\r\n                </Character>\r\n            </Dialog>\r\n            <ButtonPane>\r\n                <Button onClick={props.controls.proceedShrekTalk}>>></Button>\r\n            </ButtonPane>\r\n        </DialogPane>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport bg from \"./media/noir_sunset.svg\";\r\nimport Stubble from \"./Stubble\";\r\nimport Shrek from \"./Shrek\";\r\nimport ShrekDialog from \"./ShrekDialog\";\r\n\r\nconst GameWindow = styled.div`\r\n    width: 800px;\r\n    height: 600px;\r\n    overflow: hidden;\r\n    position: relative;\r\n`;\r\n\r\nconst Bg = styled.img`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 1600px;\r\n    height: 600px;\r\n    display: block;\r\n`;\r\n\r\nconst Floor = styled.div`\r\n    width: 4800px;\r\n    background-color: #555;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 70%;\r\n    height: 30%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n`;\r\n\r\nconst Marker = styled.div`\r\n    width: 50px;\r\n    height: 12px;\r\n    background-color: #aaa;\r\n`;\r\n\r\nconst Prompt = styled.div`\r\n    position: absolute;\r\n    padding: 7px;\r\n    color: white;\r\n    border: 2px solid white;\r\n    background-color: rgb(11, 34, 51);\r\n    color: white;\r\n    font-family: monospace;\r\n    cursor: pointer;\r\n    :hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst shrekPos = 1400;\r\n\r\nexport default function Game(props) {\r\n    let dialogPrompt;\r\n    if (Math.abs(props.stubblePos - shrekPos) < 200) {\r\n        dialogPrompt = (\r\n            <Prompt style={{left: `${shrekPos - 100}px`, top: \"-270px\"}} onClick={props.controls.talkToShrek}>\r\n                Talk to detective\r\n            </Prompt>\r\n        );\r\n    }\r\n    let dialog;\r\n    if (props.shrekDialog) {\r\n        dialog = <ShrekDialog controls={props.controls} stubbleText={props.stubbleText} shrekText={props.shrekText}/>;\r\n    }\r\n    return (\r\n        <GameWindow>\r\n            <Bg src={bg} style={{left: `${-props.panPos / 5}px`}}/>\r\n            <Floor style={{left: `${-props.panPos}px`}}>\r\n                <Shrek/>\r\n                {dialogPrompt}\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n                <Marker/>\r\n            </Floor>\r\n            <Stubble pos={props.stubblePos - props.panPos} stance={props.stubbleStance}/>\r\n            {dialog}\r\n        </GameWindow>\r\n    );\r\n}\r\n","import React, { Component, useState } from 'react';\nimport './App.css';\nimport Game from \"./Game\";\nimport music from \"./on_the_ground.mp3\"\nimport styled from \"styled-components\";\nimport tack from \"./media/tack.wav\";\n\nconst keys = {\n  right: false,\n  left: false,\n};\n\nconst handleKeyDown = (e) => {\n  switch (e.key) {\n    case \"ArrowRight\":\n      keys.right = true;\n      break;\n    case \"ArrowLeft\":\n      keys.left = true;\n      break;\n  }\n};\n\nconst handleKeyUp = (e) => {\n  switch (e.key) {\n    case \"ArrowRight\":\n      keys.right = false;\n      break;\n    case \"ArrowLeft\":\n      keys.left = false;\n      break;\n  }\n};\n\nconst env = {\n  playing: false,\n  stubblePos: 10,\n  stubbleStance: \"right\",\n  panPos: 0,\n  shrekDialog: false,\n  stubbleText: \"\",\n  shrekText: \"\",\n  discussionStep: 0,\n};\n\nconst runUpdateLoop = () => {\n  setTimeout(() => {\n    if (keys.right) {\n      // set({stubblePos: env.stubblePos + 10});\n      moveStubble(10);\n    } else if (keys.left) {\n      // set({stubblePos: env.stubblePos - 10});\n      moveStubble(-10);\n    }\n    runUpdateLoop();\n  }, 30);\n};\n\nconst ctl = {\n  setState: null\n};\n\nconst moveStubble = (offset) => {\n  const newState = {...env};\n  newState.stubbleStance = (offset < 0) ? \"left\" : \"right\";\n  newState.stubblePos = newState.stubblePos + offset;\n  if (!newState.shrekDialog && newState.stubblePos >= 0 && newState.stubblePos <= (4800 - 76)) {\n    if ((newState.stubblePos - newState.panPos - 400) > 60) {\n      const newPanPos = newState.stubblePos - 460;\n      if ((newPanPos + 800) < 4800) {\n        newState.panPos = newPanPos;\n      }\n    } else if ((newState.stubblePos - newState.panPos) < 264) {\n      const newPanPos = newState.stubblePos - 264;\n      if (newPanPos > 0) {\n        newState.panPos = newPanPos;\n      }\n    }\n    set(newState);  \n  }\n};\n\nconst set = (newState) => {\n  for (let k in newState) {\n    env[k] = newState[k];\n  }\n  if (ctl.setState) {\n    ctl.setState({...env, ...newState});\n  }\n};\n\nrunUpdateLoop();\nconst playMusic = () => {\n  if (!env.playing) {\n    const mloop = () => {\n      (new Audio(music)).play();\n      setTimeout(mloop, 165000);\n    }\n    mloop();\n    set({playing: true, stubbleStance: \"right\"});\n  }\n}\n\nconst controls = {\n  talkToShrek: () => {\n    set({shrekDialog: true, discussionStep: 0});\n    runDiscussion();\n  },\n  proceedShrekTalk: () => {\n    if (env.discussionStep < discussion.length) {\n      runDiscussion();\n    } else {\n      set({shrekDialog: false});\n    }\n  },\n};\n\nconst discussion = [\n  {shrek: \"Hello again. It's good to see you.\"},\n  {stubble: \"The feeling is not mutual. What are you doing in my part of town?\"},\n  {shrek: \"I'm running a job for the Captain; a personal favor. Not that it's any of your business.\"},\n  {stubble: \"I thought you got discharged from the force after that stunt you pulled on me in Novosibirsk.\"},\n  {shrek: \"I did what had to be done. You wouldn't understand. People like me are like onions; we have... layers.\"},\n  {stubble: \"You might as well get on with describing the Captain's job; it's only a matter of time before I find out.\"},\n  {shrek: \"We're investigating some suspicious activity around the abandoned warehouse on 4th and Oak.\"}\n];\n\nconst runDiscussion = () => {\n  const [target, text] = Object.entries(discussion[env.discussionStep])[0];\n  say(target, text);\n  set({discussionStep: env.discussionStep + 1});\n}\n\nconst targets = {\n  stubble: \"stubbleText\",\n  shrek: \"shrekText\",\n};\n\nconst say = (speaker, text) => {\n  set({shrekText: \"\", stubbleText: \"\"});\n  let typedText = \"\";\n  const target = targets[speaker];\n  let flop = false;\n  const typeChar = () => {\n    typedText = typedText + text.charAt(typedText.length);\n    set({[target]: typedText});\n    flop = !flop;\n    if (flop) {\n      (new Audio(tack)).play();\n    }\n    if (typedText.length < text.length) {\n      setTimeout(typeChar, 30);\n    }\n  };\n  setTimeout(typeChar, 30);\n}\n\nconst Splash = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 10;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default function App(props) {\n  // playMusic();\n  const [state, setState] = useState(env);\n  ctl.setState = setState;\n  document.removeEventListener(\"keydown\", handleKeyDown);\n  document.removeEventListener(\"keyup\", handleKeyUp);\n  document.addEventListener(\"keydown\", handleKeyDown);\n  document.addEventListener(\"keyup\", handleKeyUp);\n  return (\n    <div className=\"App\" onClick={playMusic}>\n      {!state.playing && <Splash onClick={playMusic}>Click to start adventure</Splash>}\n      <source id=\"music\" src=\"media/on_the_ground.mp3\"/>\n      <div className=\"title\">Stubble Environment - Build 1</div>\n      <Game {...state} controls={controls}/>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}